/*
 * This file uses the X-List pattern to define all required xcb functions
 */

X(xcb_connect, xcb_connection_t*, (const char *display, int *screen))
X(xcb_disconnect, void, (xcb_connection_t *c))
X(xcb_get_setup, const xcb_setup_t*, (xcb_connection_t *c))
X(xcb_setup_roots_iterator, xcb_screen_iterator_t, (const xcb_setup_t *R))
X(xcb_generate_id, uint32_t, (xcb_connection_t *c))
X(xcb_request_check, xcb_generic_error_t*, (xcb_connection_t *c, xcb_void_cookie_t cookie))
X(xcb_flush, int, (xcb_connection_t *c))
X(xcb_create_window_checked, xcb_void_cookie_t, (xcb_connection_t *c,uint8_t depth,xcb_window_t wid,xcb_window_t parent,int16_t x,int16_t y, uint16_t width,uint16_t height,uint16_t border_width,uint16_t _class,xcb_visualid_t visual,uint32_t value_mask,const void *value_list))
X(xcb_map_window, xcb_void_cookie_t, (xcb_connection_t *c, xcb_window_t window))
X(xcb_change_property, xcb_void_cookie_t, (xcb_connection_t *c, uint8_t mode, xcb_window_t window, xcb_atom_t property, xcb_atom_t type, uint8_t format, uint32_t data_len, const void *data))
X(xcb_get_property_value, void*, (const xcb_get_property_reply_t *R))
X(xcb_get_property_value_length, int,(const xcb_get_property_reply_t *R))
X(xcb_get_property_reply, xcb_get_property_reply_t*, (xcb_connection_t *c, xcb_get_property_cookie_t cookie, xcb_generic_error_t **e))
X(xcb_get_property, xcb_get_property_cookie_t, (xcb_connection_t *c, uint8_t _delete, xcb_window_t window, xcb_atom_t  property, xcb_atom_t type, uint32_t long_offset, uint32_t long_length))
X(xcb_get_file_descriptor, int, (xcb_connection_t *c))
X(xcb_poll_for_event, xcb_generic_event_t*, (xcb_connection_t *c))
X(xcb_intern_atom, xcb_intern_atom_cookie_t, (xcb_connection_t *c, uint8_t only_if_exists, uint16_t name_len, const char *name))
X(xcb_intern_atom_reply, xcb_intern_atom_reply_t*, (xcb_connection_t *c, xcb_intern_atom_cookie_t cookie, xcb_generic_error_t **e))
X(xcb_destroy_window, xcb_void_cookie_t, (xcb_connection_t *c, xcb_window_t window))
X(xcb_poll_for_queued_event, xcb_generic_event_t*, (xcb_connection_t *c))
X(xcb_wait_for_event, xcb_generic_event_t*, (xcb_connection_t *c))
X(xcb_query_pointer, xcb_query_pointer_cookie_t, (xcb_connection_t *c, xcb_window_t window))
X(xcb_query_pointer_reply, xcb_query_pointer_reply_t*, (xcb_connection_t *c, xcb_query_pointer_cookie_t cookie, xcb_generic_error_t **e))
X(xcb_open_font, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_font_t fid, uint16_t name_len, const char *name))
X(xcb_close_font, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_font_t font))
X(xcb_create_glyph_cursor, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_cursor_t cid, xcb_font_t source_font, xcb_font_t mask_font, uint16_t source_char, uint16_t mask_char, uint16_t fore_red, uint16_t fore_green, uint16_t fore_blue, uint16_t back_red, uint16_t back_green, uint16_t back_blue))
X(xcb_free_cursor, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_cursor_t cursor))
X(xcb_grab_pointer, xcb_grab_pointer_cookie_t, (xcb_connection_t *conn, uint8_t owner_events, xcb_window_t grab_window, uint16_t event_mask, uint8_t pointer_mode, uint8_t keyboard_mode, xcb_window_t confine_to, xcb_cursor_t cursor, xcb_timestamp_t time))
X(xcb_grab_pointer_reply, xcb_grab_pointer_reply_t*, (xcb_connection_t *conn, xcb_grab_pointer_cookie_t cookie, xcb_generic_error_t **e))
X(xcb_ungrab_pointer, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_timestamp_t time))
X(xcb_map_window_checked, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_window_t window))
X(xcb_unmap_window_checked, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_window_t window))
X(xcb_change_window_attributes, xcb_void_cookie_t, (xcb_connection_t *conn, xcb_window_t window, uint32_t value_mask, const uint32_t *value_list))
X(xcb_create_gc, xcb_void_cookie_t, (xcb_connection_t *c, xcb_gcontext_t cid, xcb_drawable_t drawable, uint32_t value_mask,  const void *value_list))
X(xcb_create_cursor, xcb_void_cookie_t, (xcb_connection_t *c,xcb_cursor_t      cid,xcb_pixmap_t      source,xcb_pixmap_t      mask,uint16_t          fore_red,uint16_t          fore_green,uint16_t          fore_blue,uint16_t          back_red,uint16_t          back_green,uint16_t          back_blue,uint16_t          x,uint16_t          y))
X(xcb_screen_allowed_depths_iterator, xcb_depth_iterator_t, (const xcb_screen_t *R))
X(xcb_depth_next, void, (xcb_depth_iterator_t *i))
X(xcb_free_pixmap, xcb_void_cookie_t, (xcb_connection_t *c, xcb_pixmap_t pixmap))
X(xcb_put_image, xcb_void_cookie_t, (xcb_connection_t *c,uint8_t format,xcb_drawable_t drawable,xcb_gcontext_t    gc,uint16_t          width,uint16_t          height,int16_t           dst_x,int16_t           dst_y,uint8_t           left_pad,uint8_t           depth,uint32_t          data_len,const uint8_t    *data));
X(xcb_create_pixmap, xcb_void_cookie_t, (xcb_connection_t *c,uint8_t depth,xcb_pixmap_t pid,xcb_drawable_t    drawable,uint16_t          width,uint16_t          height))
X(xcb_free_gc, xcb_void_cookie_t, (xcb_connection_t *c, xcb_gcontext_t gc))
X(xcb_query_tree, xcb_query_tree_cookie_t, (xcb_connection_t *c, xcb_window_t window))
X(xcb_query_tree_reply, xcb_query_tree_reply_t *,(xcb_connection_t *c, xcb_query_tree_cookie_t cookie, xcb_generic_error_t** e))
X(xcb_query_tree_children, xcb_window_t* ,(const xcb_query_tree_reply_t *R))
X(xcb_query_tree_children_length, int, (const xcb_query_tree_reply_t *R))
X(xcb_get_window_attributes, xcb_get_window_attributes_cookie_t, (xcb_connection_t *c,xcb_window_t window))
X(xcb_get_window_attributes_reply, xcb_get_window_attributes_reply_t *, (xcb_connection_t *c, xcb_get_window_attributes_cookie_t cookie, xcb_generic_error_t **e))
X(xcb_get_geometry, xcb_get_geometry_cookie_t, (xcb_connection_t *c, xcb_drawable_t drawable))
X(xcb_get_geometry_reply, xcb_get_geometry_reply_t*, (xcb_connection_t *c, xcb_get_geometry_cookie_t   cookie ,xcb_generic_error_t **e))
X(xcb_send_event, xcb_void_cookie_t,(xcb_connection_t *c, uint8_t propagate, xcb_window_t destination, uint32_t event_mask, const char *event))
X(xcb_translate_coordinates, xcb_translate_coordinates_cookie_t, (xcb_connection_t *c,xcb_window_t src_window, xcb_window_t dst_window, int16_t src_x, int16_t src_y))
X(xcb_translate_coordinates_reply, xcb_translate_coordinates_reply_t *,(xcb_connection_t                    *c, xcb_translate_coordinates_cookie_t cookie, xcb_generic_error_t **e))
X(xcb_set_selection_owner, xcb_void_cookie_t,(xcb_connection_t *c,xcb_window_t      owner,xcb_atom_t        selection,xcb_timestamp_t   time))
X(xcb_get_atom_name, xcb_get_atom_name_cookie_t,  (xcb_connection_t *c,xcb_atom_t        atom))
X(xcb_get_atom_name_reply, xcb_get_atom_name_reply_t *,  (xcb_connection_t            *c,xcb_get_atom_name_cookie_t   cookie  /**< */,xcb_generic_error_t        **e))
X(xcb_get_atom_name_name, char *, (const xcb_get_atom_name_reply_t *R))
//X(xcb_get_keyboard_mapping, xcb_get_keyboard_mapping_cookie_t, (xcb_connection_t *c, xcb_keycode_t first_keycode, uint8_t count))
//X(xcb_get_keyboard_mapping_reply, xcb_get_keyboard_mapping_reply_t*, (xcb_connection_t* c, xcb_get_keyboard_mapping_cookie_t cookie, xcb_generic_error_t** e))
//X(xcb_get_keyboard_mapping_keysyms, xcb_keysym_t*, (const xcb_get_keyboard_mapping_reply_t *R))
